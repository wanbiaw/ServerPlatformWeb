{"remainingRequest":"D:\\ServerPlatformWeb\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\ServerPlatformWeb\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\ServerPlatformWeb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ServerPlatformWeb\\src\\pages\\dashboard\\Dashboard.vue?vue&type=template&id=3a578165&scoped=true&","dependencies":[{"path":"D:\\ServerPlatformWeb\\src\\pages\\dashboard\\Dashboard.vue","mtime":1651127882751},{"path":"D:\\ServerPlatformWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ServerPlatformWeb\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\ServerPlatformWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ServerPlatformWeb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}