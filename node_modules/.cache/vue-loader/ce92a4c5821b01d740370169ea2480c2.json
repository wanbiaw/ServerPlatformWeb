{"remainingRequest":"D:\\ServerPlatformWeb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ServerPlatformWeb\\src\\components\\table\\StandardTable.vue?vue&type=style&index=0&id=1de75ee0&scoped=true&lang=less&","dependencies":[{"path":"D:\\ServerPlatformWeb\\src\\components\\table\\StandardTable.vue","mtime":1649217944428},{"path":"D:\\ServerPlatformWeb\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ServerPlatformWeb\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\ServerPlatformWeb\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\ServerPlatformWeb\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ServerPlatformWeb\\node_modules\\style-resources-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\ServerPlatformWeb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ServerPlatformWeb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouc3RhbmRhcmQtdGFibGV7DQogIC5hbGVydHsNCiAgICBtYXJnaW4tYm90dG9tOiAxNnB4Ow0KICAgIC5tZXNzYWdlew0KICAgICAgYXsNCiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDsNCiAgICAgIH0NCiAgICB9DQogICAgLmNsZWFyew0KICAgICAgZmxvYXQ6IHJpZ2h0Ow0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["StandardTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"StandardTable.vue","sourceRoot":"src/components/table","sourcesContent":["<template>\r\n  <div class=\"standard-table\">\r\n    <div class=\"alert\">\r\n      <a-alert type=\"info\" :show-icon=\"true\" v-if=\"selectedRows\">\r\n        <div class=\"message\" slot=\"message\">\r\n          已选择&nbsp;<a>{{selectedRows.length}}</a>&nbsp;项 <a class=\"clear\" @click=\"onClear\">清空</a>\r\n          <template  v-for=\"(item, index) in needTotalList\" >\r\n            <div v-if=\"item.needTotal\" :key=\"index\">\r\n              {{item.title}}总计&nbsp;\r\n              <a>{{item.customRender ? item.customRender(item.total) : item.total}}</a>\r\n            </div>\r\n          </template>\r\n        </div>\r\n      </a-alert>\r\n    </div>\r\n    <a-table\r\n      :bordered=\"bordered\"\r\n      :loading=\"loading\"\r\n      :columns=\"columns\"\r\n      :dataSource=\"dataSource\"\r\n      :rowKey=\"rowKey\"\r\n      :pagination=\"pagination\"\r\n      :expandedRowKeys=\"expandedRowKeys\"\r\n      :expandedRowRender=\"expandedRowRender\"\r\n      @change=\"onChange\"\r\n      :rowSelection=\"selectedRows ? {selectedRowKeys: selectedRowKeys, onChange: updateSelect} : undefined\"\r\n    >\r\n      <template slot-scope=\"text, record, index\" :slot=\"slot\" v-for=\"slot in Object.keys($scopedSlots).filter(key => key !== 'expandedRowRender') \">\r\n        <slot :name=\"slot\" v-bind=\"{text, record, index}\"></slot>\r\n      </template>\r\n      <template :slot=\"slot\" v-for=\"slot in Object.keys($slots)\">\r\n        <slot :name=\"slot\"></slot>\r\n      </template>\r\n      <template slot-scope=\"record, index, indent, expanded\" :slot=\"$scopedSlots.expandedRowRender ? 'expandedRowRender' : ''\">\r\n        <slot v-bind=\"{record, index, indent, expanded}\" :name=\"$scopedSlots.expandedRowRender ? 'expandedRowRender' : ''\"></slot>\r\n      </template>\r\n    </a-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'StandardTable',\r\n  props: {\r\n    bordered: Boolean,\r\n    loading: [Boolean, Object],\r\n    columns: Array,\r\n    dataSource: Array,\r\n    rowKey: {\r\n      type: [String, Function],\r\n      default: 'key'\r\n    },\r\n    pagination: {\r\n      type: [Object, Boolean],\r\n      default: true\r\n    },\r\n    selectedRows: Array,\r\n    expandedRowKeys: Array,\r\n    expandedRowRender: Function\r\n  },\r\n  data () {\r\n    return {\r\n      needTotalList: []\r\n    }\r\n  },\r\n  methods: {\r\n    updateSelect (selectedRowKeys, selectedRows) {\r\n      this.$emit('update:selectedRows', selectedRows)\r\n      this.$emit('selectedRowChange', selectedRowKeys, selectedRows)\r\n    },\r\n    initTotalList (columns) {\r\n      const totalList = columns.filter(item => item.needTotal)\r\n        .map(item => {\r\n          return {\r\n            ...item,\r\n            total: 0\r\n          }\r\n        })\r\n      return totalList\r\n    },\r\n    onClear() {\r\n      this.updateSelect([], [])\r\n      this.$emit('clear')\r\n    },\r\n    onChange(pagination, filters, sorter, {currentDataSource}) {\r\n      this.$emit('change', pagination, filters, sorter, {currentDataSource})\r\n    }\r\n  },\r\n  created () {\r\n    this.needTotalList = this.initTotalList(this.columns)\r\n  },\r\n  watch: {\r\n    selectedRows (selectedRows) {\r\n      this.needTotalList = this.needTotalList.map(item => {\r\n        return {\r\n          ...item,\r\n          total: selectedRows.reduce((sum, val) => {\r\n            let v\r\n            try{\r\n              v = val[item.dataIndex] ? val[item.dataIndex] : eval(`val.${item.dataIndex}`);\r\n            }catch(_){\r\n              v = val[item.dataIndex];\r\n            }\r\n            v = !isNaN(parseFloat(v)) ? parseFloat(v) : 0;\r\n            return sum + v\r\n          }, 0)\r\n        }\r\n      })\r\n    }\r\n  },\r\n  computed: {\r\n    selectedRowKeys() {\r\n      return this.selectedRows.map(record => {\r\n        return (typeof this.rowKey === 'function') ? this.rowKey(record) : record[this.rowKey]\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.standard-table{\r\n  .alert{\r\n    margin-bottom: 16px;\r\n    .message{\r\n      a{\r\n        font-weight: 600;\r\n      }\r\n    }\r\n    .clear{\r\n      float: right;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}